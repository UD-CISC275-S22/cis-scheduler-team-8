            <Form.Group controlId="taken">
                    <Form.Label>Taken</Form.Label>
                    <Form.Select value={credits} onChange={updateTaken}>
                        <option value={true}>Taken</option>
                        <option value={false}>Not Taken</option>
                    </Form.Select>
                </Form.Group>  
            {(
                const [taken, setTaken] = useState<boolean>(course.taken);

function savePlan() {
        addPlan({
            id: id,
            name: name,
            semester: []
        });
        setId(id + 1);
    }

export function AddPlan({ addPlan }: { addPlan: (newPlan: degree) => void }) {
    type ChangeEvent = React.ChangeEvent<
        HTMLTextAreaElement | HTMLInputElement | HTMLSelectElement
    >;
    const [id, setId] = useState<number>(0);
    const [name, setName] = useState<string>("");
    //const [semester, setSemester] = useState<string>("");

    function updatePlans() {
        const newPlanList = [
            ...plans,
            {
                id: 0, //TODO figure out id updates
                name: name,
                semester: []
            }
        ];
        setPlan(newPlanList);
    }
    function savePlan() {
        addPlan({
            id: id,
            name: name,
            semester: []
        });
        setId(id + 1);
    }
    function updateName(event: React.ChangeEvent<HTMLSelectElement>) {
        setName(event.target.value);
    }
    return (
        <div>
            <div>
                <Form.Group controlId="sessions">
                    <Form.Label>Plans</Form.Label>
                    <Form.Select value={session} onChange={updateName}>
                        {plans.map((item) => {
                            return (
                                <option key={item.name} value={item.name}>
                                    {" "}
                                    {item.name}{" "}
                                </option>
                            );
                        })}
                    </Form.Select>
                </Form.Group>
            </div>
            <div>
                <Button onClick={() => updatePlans()}> Add Plan </Button>
                <Form.Group controlId="degreeName">
                    <Form.Label>Plan Name</Form.Label>
                    <Form.Control
                        value={name}
                        onChange={(
                            event: React.ChangeEvent<HTMLInputElement>
                        ) => setName(event.target.value)}
                    />
                </Form.Group>
            </div>
        </div>
    );
}


For App.tsx intializing plan
const intialPlan = samplePlan.map(
        (plan): degree => ({
            ...plan,
            semester: plan.semesters.map(
                (semester): semester => ({
                    ...semester,
                    courses: semester.courses.map(
                        (course): course => ({ ...course })
                    )
                })
            ),
            name: plan.name
        })
    );
    const [plans, setPlans] = useState<degree[]>(intialPlan);

    function addDegreePlan(newPlan: degree) {
        setPlans([...plans, newPlan]);
    }




<Modal.Body>
                <Form.Group controlId="sessions">
                    <Form.Label>Session Season</Form.Label>
                    <Form.Select value={session} onChange={updateSemester}>
                        <option value="Fall">Fall</option>
                        <option value="Winter">Winter</option>
                        <option value="Spring">Spring</option>
                        <option value="Summer">Summer</option>
                    </Form.Select>
                </Form.Group>
                <Form.Group controlId="year">
                    <Form.Label>Session Year</Form.Label>
                    <Form.Control value={year} onChange={updateYear} />
                </Form.Group>
            </Modal.Body>
            <Modal.Footer>
                <Button variant="secondary" onClick={handleClose}>
                    Close
                </Button>
                <Button variant="primary" onClick={saveSemester}>
                    Save Changes
                </Button>
            </Modal.Footer>

<div>
                <addSemester
                    show={showAddModal}
                    handleClose={handleCloseAddModal}
                    adSemester={addSemester}
                ></addSemester>
            </div>